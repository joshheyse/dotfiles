#! /usr/bin/env zsh

source ~/.bash_profile

typeset -U path

if type brew &>/dev/null; then
  HOMEBREW_PREFIX="$(brew --prefix)"
  fpath+="$HOMEBREW_PREFIX/share/zsh/site-functions"
fi

path+="$HOME/.local/bin"

export TERMINFO_DIRS="$TERMINFO_DIRS:$HOME/.local/share/terminfo"

export CONDA_PREFIX="$HOME/.miniconda"
if [ -d $CONDA_PREFIX ]; then
  __conda_setup="$("$CONDA_PREFIX/bin/conda" 'shell.zsh' 'hook' 2> /dev/null)"
  if [ $? -eq 0 ]; then
    eval "$__conda_setup"
  else
    if [ -f "$CONDA_PREFIX/etc/profile.d/conda.sh" ]; then
      . "$CONDA_PREFIX/etc/profile.d/conda.sh"
      conda deactivate
    else
      prependPath "$CONDA_PREFIX/bin"
    fi
  fi
  unset __conda_setup
else
  unset CONDA_PREFIX
fi

ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"
if [[ ! -d $ZINIT_HOME ]]; then
  mkdir -p "$(dirname $ZINIT_HOME)"
  git clone https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"
fi
source "${ZINIT_HOME}/zinit.zsh"

# misc
setopt interactive_comments long_list_jobs extendedglob notify list_packed transient_rprompt

# word movement should stop on slashes
export WORDCHARS=$WORDCHARS:s:/:
###############################################################################
# directory navigation options
###############################################################################
setopt auto_cd auto_pushd pushd_ignore_dups glob_complete numeric_glob_sort
export DIRSTACKSIZE=10

###############################################################################
# history
###############################################################################
# replace histignorealldups with histsavenodups to make zsh autosuggestion option match_prev_cmd work
setopt correct hist_save_no_dups inc_append_history extended_history hist_ignore_space hist_reduce_blanks hist_verify hist_fcntl_lock

export HISTFILE=~/.zsh_history
export SAVEHIST=$HISTSIZE

###############################################################################
# completion
###############################################################################
setopt nolistbeep # could be nobeep, but that will create cases where there is no repsone at all to a <tab>
# Do menu-driven completion.
zstyle ':completion:*' menu select

# make file completion match ls colors - this now done by trapd00r/LS_COLORS
#zstyle ':completion:*' list-colors $LS_COLORS

# formatting and messages
# http://www.masterzen.fr/2009/04/19/in-love-with-zsh-part-one/
zstyle ':completion:*' extra-verbose yes
# describe different versions of completion. Test with: cd<tab>
zstyle ':completion:*:descriptions' format "%F{yellow}--- %d%f"
zstyle ':completion:*:messages' format '%d'
# when no match exists. Test with: cd fdjsakl<tab>
zstyle ':completion:*:warnings' format "%F{red}No matches for:%f %d"
zstyle ':completion:*:corrections' format '%B%d (errors: %e)%b'
# groups matches. Test with cd<tab>
zstyle ':completion:*' group-name ''
# this will only show up if a parameter flag has a name but no description
zstyle ':completion:*' auto-description 'specify: %d'
# this should make completion for some commands faster, haven't noticed though. saves in .zcompcache
zstyle ':completion::complete:*' use-cache 1

zinit wait'0a' lucid blockf for zsh-users/zsh-completions
# note that this is for completion of cyme only, the command is gotten from cargo
zinit wait'2' lucid light-mode from"gh" pick"doc/_cyme" as"completion" for tuna-f1sh/cyme

zinit wait'1' lucid as"completion" light-mode pick"_*" for nilsonholger/osx-zsh-completions
# note that this is for completion of cyme only, the command is gotten from cargo
zinit wait'2' lucid light-mode from"gh" pick"doc/_cyme" as"completion" for tuna-f1sh/cyme

zinit wait'1' lucid light-mode for lukechilds/zsh-better-npm-completion
zinit wait'1' atclone'./zplug.zsh' lucid for g-plane/zsh-yarn-autocompletions
zinit wait'1' lucid light-mode for jscutlery/nx-completion


zinit wait'1' lucid for supercrabtree/k


export ZSH_AUTOSUGGEST_USE_ASYNC=1
# for match_prev_cmd to work, it requires histignorealldups to be removed (which is ok: do histsavenodups instead)
export ZSH_AUTOSUGGEST_STRATEGY=(match_prev_cmd completion)
zinit wait'0' lucid atload"!_zsh_autosuggest_start
" for zsh-users/zsh-autosuggestions


if [ -x "$(command -v zoxide)" ]; then
  export _ZO_EXCLUDE_DIRS=$HOME
  zinit wait'0' lucid as'null' atinit'unalias zi;eval "$(zoxide init zsh --hook prompt)" && alias c=__zoxide_zi zi=zinit' light-mode for zdharma-continuum/null
elif [ -d "$HOMEBREW_PREFIX/share/z.lua" ]; then
  export _ZL_MATCH_MODE=1
  zinit wait'0' lucid as'null' atinit'source $HOMEBREW_PREFIX/share/z.lua/z.lua.plugin.zsh' light-mode for zdharma-continuum/null
  alias c="z -I"
else
  # zoxide not available on old raspberry pi. fasd is pure shell, but slow: fasd takes 0.06s
  zinit wait'0' lucid as"program" pick"$ZPFX/fasd" make"PREFIX=$ZPFX install" \
    atinit'eval "$(fasd --init auto)" && alias sd="noglob sd"' light-mode for clvv/fasd
  function c() {
    local dir
    dir="$(fasd -Rdl "$1" | $FZF -1 -0 --no-sort +m)" && cd "${dir}" || return 1
  }
fi

# fuzzy completion: ^R, ^T, ⌥C, **
export FZF_DEFAULT_COMMAND="$FD --type file"
# --ansi makes fzf a bit slower, but I haven't really noticed, this preview is used for ** completion
# colors are dracula theme
export FZF_DEFAULT_OPTS="--ansi --select-1 --height ~40% --reverse --tiebreak=begin --bind end:preview-down,home:preview-up,ctrl-a:select-all+accept \
 --color=fg:#f8f8f2,bg:#282a36,hl:#bd93f9 --color=fg+:#f8f8f2,bg+:#44475a,hl+:#bd93f9 --color=info:#ffb86c,prompt:#50fa7b,pointer:#ff79c6 --color=marker:#ff79c6,spinner:#ffb86c,header:#6272a4"
export FZF_TMUX_OPTS="-d 70%"
# tmux was a bit slower
#export FZF_TMUX=1
#FZF="fzf-tmux"
FZF=fzf
# this harmed kill -9 and git co **
#export FZF_COMPLETION_OPTS="--preview '(bat --color always --paging never {} 2> /dev/null || tree -C {}) 2> /dev/null | head -200' --preview-window=right:33%"
# this is slow for large sets, could be sorted with ' | sort -u' but that is just the initial sorting
export FZF_ALT_C_COMMAND='$FD --type directory'
export FZF_ALT_C_OPTS="--preview 'CLICOLOR_FORCE=1 ls -GF {} | head -200' --preview-window=right:20%"
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
if [ -x "$(command -v bat)" ]; then
  export FZF_CTRL_T_OPTS="--preview 'bat --color always {} | head -120' --preview-window=right:33%"
fi
zinit wait'1' lucid as'null' \
  atinit"[ -f ~/.fzf.$SHELLNAME ] && source ~/.fzf.$SHELLNAME && bindkey 'ç' fzf-cd-widget #option-c" light-mode for zdharma-continuum/null

# history search has to be loaded aftr fzf, so that it overwrites ^R
if [[ -x $(command -v atuin) ]]; then
  zinit wait'1' lucid light-mode atinit"bindkey '^xr' history-search-multi-word" for zdharma-continuum/history-search-multi-word
  export ATUIN_NOBIND="true"
  zinit wait"1" lucid light-mode atinit"bindkey '^r' _atuin_search_widget" for ellie/atuin
else
  zinit wait'1' lucid for zdharma-continuum/history-search-multi-word
fi

zinit wait'1' lucid light-mode for "cedi/meaningful-error-codes"

zinit wait'1' lucid if'[[ -x "$(command -v fzf)" ]]' for wfxr/forgit
# gi for forgit_ignore was a confusing alias
forgit_ignore=forgig
# ctrl-d to drop stash with gss
export FORGIT_STASH_FZF_OPTS='--bind="ctrl-d:reload(git stash drop $(cut -d: -f1 <<<{}) 1>/dev/null && git stash list)"'


zinit wait'1' lucid for \
  MichaelAquilina/zsh-you-should-use \
  OMZP::dircycle

zinit wait'1' lucid atinit'alias f=fuck' light-mode for laggardkernel/zsh-thefuck

# load diff-so-fancy if not already present (it can have been installed by homebrew)
zinit wait'1' lucid as"program" pick"bin/git-dsf" if'[[ ! -x "$(command -v diff-so-fancy)" ]]' light-mode for \
  zdharma-continuum/zsh-diff-so-fancy


zinit wait'1' lucid light-mode for mellbourn/zabb

# fzf-tab doesn't currently work in Ubuntu https://github.com/Aloxaf/fzf-tab/issues/189
zinit wait'1' lucid atclone'source fzf-tab.zsh && build-fzf-tab-module' atpull'%atclone' for Aloxaf/fzf-tab
# disable sort when completing `git checkout`
zstyle ':completion:*:git-checkout:*' sort false
# set descriptions format to enable group support
zstyle ':completion:*:descriptions' format '[%d]'
# preview directory's content with exa when completing cd
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'lsd -l --blocks name,permission,size,date --color=always --icon=always $realpath'
zstyle ':fzf-tab:complete:ls:*' fzf-preview '[ -f "$realpath" ] && bat --color=always $realpath || lsd -l --blocks name,permission,size,date --color=always --icon=always $realpath'
zstyle ':fzf-tab:complete:export:*' fzf-preview 'printenv $word'
zstyle ':fzf-tab:complete:ssh:*' fzf-preview 'ping -c1 $word'
# switch group using `,` and `.`
zstyle ':fzf-tab:*' switch-group ',' '.'

zinit wait'2' lucid for unixorn/git-extra-commands

# list programs to generate completions for here
zstyle :plugin:zsh-completion-generator programs fzf
zinit wait'2' lucid atclone'if [ ! -d "$GENCOMPL_FPATH" ]; then
  mkdir -p $GENCOMPL_FPATH
fi' for RobSis/zsh-completion-generator

# some nice OMZ functions: take, alias, try_alias_value, omz_urlencode, omz_urldecode
zinit wait'2' lucid for \
  OMZ::lib/functions.zsh \
  OMZ::plugins/web-search/web-search.plugin.zsh

zinit wait'2' lucid light-mode for \
  paulirish/git-open \
  peterhurford/git-it-on.zsh

zinit wait'2' lucid atload'ZSH_AUTOSUGGEST_CLEAR_WIDGETS+=(autopair-insert)' light-mode for hlissner/zsh-autopair

# make text copy operations generic: clipcopy/clippaste
zinit wait'2' lucid for OMZL::clipboard.zsh


# Load zsh-vi-mode
zinit ice depth=1
zinit light jeffreytse/zsh-vi-mode

zinit light zpm-zsh/ls
zinit light zpm-zsh/autoenv
zinit light zpm-zsh/ssh

zinit wait'2' lucid \
  --atinit="ZINIT[COMPINIT_OPTS]=-C; zicompinit; autoload -U +X bashcompinit && bashcompinit; zicdreplay" \
  light-mode for zdharma-continuum/fast-syntax-highlighting

# colored man pages must be loaded after syntax-highlighting
zinit wait'2b' lucid for \
  OMZP::colored-man-pages \

if [ -x "$(command -v bat)" ]; then
  # this MUST be run after woefe/git-prompt.zsh
  alias cat=bat
  # this function does not work for piping to less with (less) arguments (any flags will become bat flags)
  function less() {
    local filename="${@:$#}" # last parameter, MUST be the filename
    local flaglength=$(($# - 1))
    if ((flaglength > 0)); then
      local other="${@:1:$flaglength}"
      bat $filename --pager "less $LESS $other"
    elif ((flaglength == 0)); then
      bat $filename --pager "less $LESS"
    else
      # no arg at all -> piping
      command less
    fi
  }
fi

# Load starship theme
zinit ice as"command" from"gh-r" \
          atclone"./starship init zsh > init.zsh; ./starship completions zsh > _starship" \
          atpull"%atclone" src"init.zsh" # pull behavior same as clone, source init.zsh
zinit light starship/starship


alias vim=lvim
alias vi=lvim

alias gs='git status'
alias gd='git diff'
alias gdc='git diff --cached'
alias ga='git add .'
alias gaa='git add -A :/'
alias gc='git commit -m '
alias gca='git commit -a -m '
alias gco='git checkout'
alias gcb='git checkout -b'
alias gpd='git pull'
alias gpu='git push -u origin HEAD'
alias gpp='git pull && git push'

# Aliases
alias la='ls -la'
alias l=ll
alias la=l -a

alias ec='chezmoi edit --apply'

alias cdp='cd $(npm prefix)'
alias cdg='cd $(git rev-parse --show-toplevel)'

export EDITOR=lvim
